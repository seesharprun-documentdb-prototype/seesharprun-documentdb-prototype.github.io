type: operator
category: aggregation
name: $addFields
description: |-
  The `$addFields` stage in the aggregation pipeline is used to add new fields to documents. It can also be used to reset the values of existing fields. This stage is particularly useful when you need to create new fields based on existing data or modify existing fields within your documents.
syntax: |-
  {
    $addFields: {
      <newField1>: <expression1>,
      <newField2>: <expression2>
    }
  }
parameters:
  - name: newField
    type: string
    required: true
    description: |-
      The name of the new field to add or the existing field to modify.
  - name: expression
    type: object
    required: true
    description: |-
      The expression to compute the value of the field.
examples:
  sample: |-
    {
      "_id": "0fcc0bf0-ed18-4ab8-b558-9848e18058f4",
      "name": "First Up Consultants | Beverage Shop",
      "staff": {
        "totalStaff": {
          "fullTime": 8,
          "partTime": 20
        }
      },
      "promotionEvents": [
        { "eventName": "Unbeatable Bargain Bash" }
      ]
    }
  items:
    - title: Adding a new field
      explanation: |-
        Add a new field totalDiscountEvents that counts the number of promotion events.
      description: |-
        This query adds a computed field using the $size operator.
      query: |-
        db.stores.aggregate([
          {
            $addFields: {
              totalDiscountEvents: { $size: "$store.promotionEvents" }
            }
          }
        ])
      output:
        value: |-
          [
            {
              "_id": "7954bd5c-9ac2-4c10-bb7a-2b79bd0963c5",
              "store": {
                "name": "Downtown Store",
                "promotionEvents": ["Summer Sale", "Black Friday", "Holiday Deals"]
              },
              "totalDiscountEvents": 3
            }
          ]
    - title: Modifying an existing field
      explanation: |-
        Add a field totalStaffCount that sums up the full-time and part-time staff.
      description: |-
        This query creates a new field by adding two existing fields together.
      query: |-
        db.stores.aggregate([
          {
            $addFields: {
              totalStaffCount: {
                $add: ["$store.staff.totalStaff.fullTime", "$store.staff.totalStaff.partTime"]
              }
            }
          }
        ])
      output:
        value: |-
          [
            {
              "_id": "7954bd5c-9ac2-4c10-bb7a-2b79bd0963c5",
              "store": {
                "name": "Downtown Store",
                "staff": {
                  "totalStaff": { "fullTime": 12, "partTime": 8 }
                }
              },
              "totalStaffCount": 20
            }
          ]
related:
  - reference: /operator/aggregation/project
  - reference: /operator/aggregation/set
