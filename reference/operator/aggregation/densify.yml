type: operator
category: aggregation
name: $densify
description: |-
  The `$densify` stage in an aggregation pipeline is used to fill in missing data points within a sequence of values. It helps in creating a more complete dataset by generating missing values based on a specified field, range, and step. This is useful in scenarios like time-series data analysis, where gaps in data points need to be filled to ensure accurate analysis.
syntax: |-
  {
    $densify: {
      field: <field>,
      range: {
        step: <number>,
        unit: <string>,
        bounds: [<lowerBound>, <upperBound>]
      },
      partitionByFields: [<field1>, <field2>, ...]
    }
  }
parameters:
  - name: field
    type: string
    required: true
    description: |-
      The field on which densification is performed.
  - name: range
    type: object
    required: true
    description: |-
      Specifies the step size and optional unit/bounds for generating missing values.
  - name: partitionByFields
    type: object
    required: false
    description: |-
      Optional. Fields used to group data for densification.
examples:
  sample: |-
    {
      "_id": "0fcc0bf0-ed18-4ab8-b558-9848e18058f4",
      "name": "First Up Consultants | Beverage Shop",
      "sales": { "totalSales": 75670 }
    }
  items:
    - title: Densify a time-series dataset
      explanation: |-
        Fill in missing days in the date field.
      description: |-
        This query fills in missing dates between existing data points using daily steps.
      query: |-
        db.aggregate([
          {
            $documents: [
              { date: new ISODate("2024-01-01"), value: 10 },
              { date: new ISODate("2024-01-03"), value: 15 }
            ]
          },
          {
            $densify: {
              field: "date",
              range: {
                step: 1,
                unit: "day",
                bounds: "full"
              }
            }
          }
        ])
      output:
        value: |-
          [
            { "date": "ISODate('2024-01-01T00:00:00.000Z')", "value": 10 },
            { "date": "ISODate('2024-01-02T00:00:00.000Z')" },
            { "date": "ISODate('2024-01-03T00:00:00.000Z')", "value": 15 }
          ]
    - title: Densify numeric data
      explanation: |-
        Fill in missing numeric values in a sequence.
      description: |-
        This query fills in missing level values between 1 and 5.
      query: |-
        db.aggregate([
          {
            $documents: [
              { level: 1, score: 10 },
              { level: 3, score: 30 }
            ]
          },
          {
            $densify: {
              field: "level",
              range: {
                step: 1,
                bounds: [1, 5] 
              }
            }
          }
        ])
      output:
        value: |-
          [
            { "level": 1, "score": 10 },
            { "level": 2 },
            { "level": 3, "score": 30 },
            { "level": 4 }
          ]
related:
  - reference: /operator/aggregation/fill
  - reference: /operator/aggregation/documents
