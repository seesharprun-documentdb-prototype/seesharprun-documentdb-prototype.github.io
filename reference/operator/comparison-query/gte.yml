type: operator
category: comparison-query
name: $gte
description: The `$gte` operator retrieves documents where the value of a field is greater than or equal to a specified value.
syntax: |
  { field: { $gte: <value> } }
parameters:
  - name: field
    type: string
    required: true
    description: The field in the document you want to compare
  - name: value
    type: number
    required: true
    description: The value that the field should be greater than or equal to
examples:
  items:
    - title: Find stores with sales >= $35,000
      description: To retrieve stores with at least $35,000 in sales, run a query using the $gte operator on the sales.totalSales field.
      query: |
        db.stores.find({
            "sales.totalSales": { $gte: 35000 }
        }, { name: 1, "sales.totalSales": 1 }, { limit: 1 })
      output:
        value: |
          [{ "_id": "2cf3f885-9962-4b67-a172-aa9039e9ae2f", "name": "First Up Consultants | Bed and Bath Center - South Amir", "sales": { "totalSales": 37701 } }]
    - title: Find promotion events with discount >= 15%
      description: To find stores with promotions with a discount of at least 15% for laptops, run a query using the $gte operator.
      query: |
        db.stores.find({
            "promotionEvents.discounts": {
                $elemMatch: {
                    categoryName: "Laptops",
                    discountPercentage: { $gte: 15 }
                }
            }
        }, { name: 1 }, { limit: 2 })
      output:
        value: |
          [
            { "_id": "60e43617-8d99-4817-b1d6-614b4a55c71e", "name": "Wide World Importers | Electronics Emporium - North Ayanashire" },
            { "_id": "3c441d5a-c9ad-47f4-9abc-ac269ded44ff", "name": "Contoso, Ltd. | Electronics Corner - New Kiera" }
          ]
related:
  - reference: /operator/comparison-query/gt
  - reference: /operator/comparison-query/lte
  - reference: /operator/comparison-query/eq
