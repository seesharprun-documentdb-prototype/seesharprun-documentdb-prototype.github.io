type: operator
category: comparison-query
name: $in
description: The `$in` operator matches values of a field against an array of possible values.
syntax: |
  { field: { $in: [ listOfValues ] } }
parameters:
  - name: field
    type: string
    required: true
    description: The field to compare
  - name: listOfValues
    type: object
    required: true
    description: An array of values to match against
examples:
  items:
    - title: Find stores with specific categories of promotions
      description: This query finds stores that offer discounts in either "Smoked Salmon" or "Anklets" categories via promotion events.
      query: |
        db.stores.find({
            "promotionEvents.discounts.categoryName": { $in: ["Smoked Salmon", "Anklets"] }
        }, { name: 1, "promotionEvents.discounts.categoryName": 1 }).limit(1)
      output:
        value: |
          [{ "_id": "48fcdab8-b961-480e-87a9-19ad880e9a0a", "name": "Lakeshore Retail | Jewelry Collection - South Nicholas" }]
    - title: Search for specified values in nested arrays
      description: This query searches for documents where at least one discountPercentage within promotionEvents.discounts is either 15 or 20.
      query: |
        db.stores.find({
            _id: "48fcdab8-b961-480e-87a9-19ad880e9a0a",
            "promotionEvents.discounts.discountPercentage": { $in: [15, 20] }
        }, { _id: 1, name: 1, "promotionEvents.discounts": 1 })
      output:
        value: |
          [{ "_id": "48fcdab8-b961-480e-87a9-19ad880e9a0a", "name": "Lakeshore Retail | Jewelry Collection - South Nicholas" }]
related:
  - reference: /operator/comparison-query/nin
  - reference: /operator/comparison-query/eq
  - reference: /operator/array-query/elemmatch
