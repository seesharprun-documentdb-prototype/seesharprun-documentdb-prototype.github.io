type: operator
category: geospatial
name: $geoIntersects
description: Selects documents whose location field intersects with a specified GeoJSON object, useful for finding locations that intersect with specific geographical areas.
syntax: '{ <location field>: { $geoIntersects: { $geometry: { type: <GeoJSON type>, coordinates: <coordinates> } } } }'
parameters:
  - name: location field
    type: string
    required: true
    description: The field containing the GeoJSON object
  - name: type
    type: string
    required: true
    description: The GeoJSON object type (e.g., "Polygon", "MultiPolygon")
  - name: coordinates
    type: object
    required: true
    description: The coordinates defining the GeoJSON object
examples:
  items:
    - title: Find stores intersecting with polygon
      description: Find stores that intersect with a specific polygon area
      query: 'db.stores.find({ location: { $geoIntersects: { $geometry: { type: "Polygon", coordinates: [[[-80.0, -75.0], [-80.0, -70.0], [-55.0, -70.0], [-55.0, -75.0], [-80.0, -75.0]]] } } } })'
      output:
        value: Documents whose locations intersect with the defined polygon
    - title: Intersection query with projection
      description: Find intersecting locations and return only name and location fields
      query: 'db.stores.find({ location: { $geoIntersects: { $geometry: { type: "Polygon", coordinates: [[[-80.0, -75.0], [-80.0, -70.0], [-55.0, -70.0], [-55.0, -75.0], [-80.0, -75.0]]] } } } }, { name: 1, location: 1 })'
      output:
        value: Limited projection of documents intersecting with polygon boundary
related:
  - reference: /reference/operator/geowithin
  - reference: /reference/operator/geometry