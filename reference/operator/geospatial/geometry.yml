type: operator
category: geospatial
name: $geometry
description: Specifies a GeoJSON geometry object for geospatial queries, used within other geospatial operators to define shapes and points for spatial calculations.
syntax: '{ $geometry: { type: <GeoJSON type>, coordinates: <coordinates> } }'
parameters:
  - name: type
    type: string
    required: true
    description: 'GeoJSON object type (Point, Polygon, MultiPolygon, etc.)'
  - name: coordinates
    type: object
    required: true
    description: Coordinates defining the GeoJSON object as an array
examples:
  items:
    - title: Find nearest stores to point geometry
      description: Use geometry operator to define a point for nearest location search
      query: 'db.stores.find({ location: { $near: { $geometry: { type: "Point", coordinates: [46.2917, -62.6354] } } } })'
      output:
        value: Stores ordered by distance from the specified point geometry
    - title: Find stores within polygon geometry
      description: Use geometry operator to define polygon boundaries for location search
      query: 'db.stores.find({ location: { $geoIntersects: { $geometry: { type: "Polygon", coordinates: [[[-80.0, -75.0], [-80.0, -70.0], [-55.0, -70.0], [-55.0, -75.0], [-80.0, -75.0]]] } } } })'
      output:
        value: Stores that intersect with the polygon geometry
    - title: Multi-polygon geometry query
      description: Use geometry operator with MultiPolygon for complex area searches
      query: 'db.stores.find({ location: { $geoWithin: { $geometry: { type: "MultiPolygon", coordinates: [[[120.0, -13.0], [120.0, -10.0], [125.0, -10.0], [125.0, -13.0], [120.0, -13.0]], [[44.0, -64.0], [44.0, -61.0], [48.0, -61.0], [48.0, -64.0], [44.0, -64.0]]] } } } })'
      output:
        value: Stores within any of the specified polygon areas
related:
  - reference: /reference/operator/near
  - reference: /reference/operator/geowithin