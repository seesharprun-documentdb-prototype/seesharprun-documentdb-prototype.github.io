type: operator
category: geospatial
name: $geoWithin
description: Selects documents whose location field falls completely within a specified geometry, supporting various shape operators including $box, $polygon, $center, and $geometry.
syntax: '{ <location field>: { $geoWithin: { <shape operator>: <shape definition> } } }'
parameters:
  - name: location field
    type: string
    required: true
    description: The field containing the location coordinates
  - name: shape operator
    type: string
    required: true
    description: 'Shape operator: $box, $center, $centerSphere, $polygon, or $geometry'
  - name: shape definition
    type: object
    required: true
    description: The specific shape definition based on the chosen shape operator
examples:
  items:
    - title: Find stores within box area
      description: Use $geoWithin with $box to find stores in rectangular area
      query: 'db.stores.find({ location: { $geoWithin: { $box: [[65.0, 65.0], [75.0, 75.0]] } } })'
      output:
        value: Stores located within the specified rectangular box area
    - title: Find stores within circular area
      description: Use $geoWithin with $center for circular area queries
      query: 'db.stores.find({ location: { $geoWithin: { $center: [[-82.5543, -65.105], 5] } } })'
      output:
        value: Stores located within the circular area defined by center and radius
    - title: Find stores within polygon geometry
      description: Use $geoWithin with $geometry for complex polygon searches
      query: 'db.stores.find({ location: { $geoWithin: { $geometry: { type: "Polygon", coordinates: [[[-85.0, -70.0], [-85.0, -60.0], [-75.0, -60.0], [-75.0, -70.0], [-85.0, -70.0]]] } } } })'
      output:
        value: Stores completely contained within the polygon boundary
related:
  - reference: /reference/operator/geointersects
  - reference: /reference/operator/box