type: operator
category: set-expression
name: $allElementsTrue
description: Returns true if all elements in an array are true, treating null, undefined, and missing values as false. Empty arrays return true.
syntax: '{ $allElementsTrue: [<array_expression>] }'
parameters:
  - name: array_expression
    type: object
    required: true
    description: Expression that resolves to an array of boolean values
examples:
  items:
    - title: Check all conditions true
      description: Verify that all boolean values in array are true
      query: 'db.surveys.aggregate([{ $project: { allPassed: { $allElementsTrue: ["$testResults"] } } }])'
      output:
        value: Documents with allPassed field indicating if all test results are true
    - title: Validate array conditions
      description: Check if all elements meet specific criteria
      query: 'db.products.aggregate([{ $project: { allInStock: { $allElementsTrue: [{ $map: { input: "$items", as: "item", in: { $gt: ["$$item.quantity", 0] } } }] } } }])'
      output:
        value: Documents with allInStock field indicating if all items have positive quantity
    - title: All elements validation
      description: Validate that all array elements pass boolean test
      query: 'db.students.aggregate([{ $project: { passedAll: { $allElementsTrue: ["$examResults"] } } }])'
      output:
        value: Documents with passedAll field showing if student passed all exams
related:
  - reference: /reference/operator/anyelementtrue
  - reference: /reference/operator/setintersection