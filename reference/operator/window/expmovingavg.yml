type: operator
category: window
name: $expMovingAvg
description: Calculates the exponential moving average of field values, giving higher weight to recent documents in the calculation for trend analysis.
syntax: '{ $expMovingAvg: { input: <field>, N: <number> } }'
parameters:
  - name: input
    type: object
    required: true
    description: Field whose values are used to calculate the exponential moving average
  - name: N
    type: number
    required: false
    description: Number of previous documents with highest weight in calculation
  - name: alpha
    type: number
    required: false
    description: Decay rate parameter, higher values give less weight to previous documents
examples:
  items:
    - title: Calculate exponential moving average of total sales
      description: Compute exponential moving average with highest weight on 2 recent documents
      query: 'db.stores.aggregate([{ $match: { "company": { $in: ["First Up Consultants"] } } }, { $setWindowFields: { "partitionBy": "$company", "sortBy": { "storeOpeningDate": 1 }, "output": { "expMovingAvgForSales": { "$expMovingAvg": { "input": "$sales.totalSales", "N": 2 } } } } }])'
      output:
        value: Stores with exponential moving average of sales using 2-document weight
    - title: Calculate exponential moving average using alpha parameter
      description: Use decay rate parameter for exponential moving average calculation
      query: 'db.stores.aggregate([{ $match: { "company": { $in: ["First Up Consultants"] } } }, { $setWindowFields: { "partitionBy": "$company", "sortBy": { "storeOpeningDate": 1 }, "output": { "expMovingAvgForSales": { "$expMovingAvg": { "input": "$sales.totalSales", "alpha": 0.75 } } } } }])'
      output:
        value: Stores with exponential moving average using 0.75 alpha decay rate
related:
  - reference: /reference/operator/avg