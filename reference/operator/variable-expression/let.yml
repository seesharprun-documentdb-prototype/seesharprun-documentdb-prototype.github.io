type: operator
category: variable-expression
name: $let
description: Defines variables for use in a specified expression and returns the result of the expression, allowing for cleaner and more readable aggregation pipelines.
syntax: '{ $let: { vars: { <var1>: <expression1>, <var2>: <expression2>, ... }, in: <expression> } }'
parameters:
  - name: vars
    type: object
    required: true
    description: Object defining variable names and their corresponding expressions
  - name: in
    type: object
    required: true
    description: The expression that can reference the defined variables using $$varname syntax
examples:
  items:
    - title: Calculate with variables
      description: Define variables for cleaner calculation expressions
      query: 'db.sales.aggregate([{ $project: { finalPrice: { $let: { vars: { price: "$basePrice", tax: 0.08, discount: "$discountRate" }, in: { $multiply: [{ $subtract: ["$$price", { $multiply: ["$$price", "$$discount"] }] }, { $add: [1, "$$tax"] }] } } } } }])'
      output:
        value: Documents with finalPrice calculated using defined variables for price, tax, and discount
    - title: Complex conditional logic
      description: Use variables to simplify complex conditional expressions
      query: 'db.products.aggregate([{ $project: { status: { $let: { vars: { qty: "$quantity", min: "$minimumStock", max: "$maximumStock" }, in: { $cond: { if: { $lt: ["$$qty", "$$min"] }, then: "low", else: { $cond: { if: { $gt: ["$$qty", "$$max"] }, then: "high", else: "normal" } } } } } } } }])'
      output:
        value: Documents with status field determined by quantity relative to min/max thresholds
    - title: String manipulation with variables
      description: Define string variables for text processing operations
      query: 'db.users.aggregate([{ $project: { displayName: { $let: { vars: { first: "$firstName", last: "$lastName", title: "$title" }, in: { $concat: ["$$title", " ", "$$first", " ", "$$last"] } } } } }])'
      output:
        value: Documents with displayName combining title, first name, and last name using variables
related:
  - reference: /reference/operator/cond
  - reference: /reference/operator/map