type: command
category: query-and-write
name: find
description: |-
  The `find` command is used to query documents within a collection. This command is fundamental for data retrieval operations and can be customized with filters, projections, and query options to fine-tune the results.
summary: Returns documents that match a specified filter criteria in a collection.
syntax: db.collection.find(query, projection, options)
parameters:
  - name: query
    type: object
    required: true
    description: A document that specifies the criteria for the documents to be retrieved.
  - name: projection
    type: object
    required: false
    description: (Optional) A document that specifies the fields in the matching documents to be returned in the result set.
  - name: options
    type: object
    required: false
    description: (Optional) A document that specifies options for query behavior and results.
examples:
  sample: |
    {
        "_id": "0fcc0bf0-ed18-4ab8-b558-9848e18058f4",
        "name": "First Up Consultants | Beverage Shop - Satterfieldmouth",
        "location": {
            "lat": -89.2384,
            "lon": -46.4012
        },
        "staff": {
            "totalStaff": {
                "fullTime": 8,
                "partTime": 20
            }
        },
        "sales": {
            "totalSales": 75670,
            "salesByCategory": [
                {
                    "categoryName": "Wine Accessories",
                    "totalSales": 34440
                },
                {
                    "categoryName": "Bitters",
                    "totalSales": 39496
                },
                {
                    "categoryName": "Rum",
                    "totalSales": 1734
                }
            ]
        },
        "promotionEvents": [
            {
                "eventName": "Unbeatable Bargain Bash",
                "promotionalDates": {
                    "startDate": {
                        "Year": 2024,
                        "Month": 6,
                        "Day": 23
                    },
                    "endDate": {
                        "Year": 2024,
                        "Month": 7,
                        "Day": 2
                    }
                },
                "discounts": [
                    {
                        "categoryName": "Whiskey",
                        "discountPercentage": 7
                    },
                    {
                        "categoryName": "Bitters",
                        "discountPercentage": 15
                    },
                    {
                        "categoryName": "Brandy",
                        "discountPercentage": 8
                    },
                    {
                        "categoryName": "Sports Drinks",
                        "discountPercentage": 22
                    },
                    {
                        "categoryName": "Vodka",
                        "discountPercentage": 19
                    }
                ]
            },
            {
                "eventName": "Steal of a Deal Days",
                "promotionalDates": {
                    "startDate": {
                        "Year": 2024,
                        "Month": 9,
                        "Day": 21
                    },
                    "endDate": {
                        "Year": 2024,
                        "Month": 9,
                        "Day": 29
                    }
                },
                "discounts": [
                    {
                        "categoryName": "Organic Wine",
                        "discountPercentage": 19
                    },
                    {
                        "categoryName": "White Wine",
                        "discountPercentage": 20
                    },
                    {
                        "categoryName": "Sparkling Wine",
                        "discountPercentage": 19
                    },
                    {
                        "categoryName": "Whiskey",
                        "discountPercentage": 17
                    },
                    {
                        "categoryName": "Vodka",
                        "discountPercentage": 23
                    }
                ]
            }
        ]
    }
  items:
    - title: Retrieve all documents
      description: The find() command without any query filters returns all documents in the collection.
      query: |-
        db.stores.find()
      output:
        devlang: json
        value: |
          [
            { ...all documents in the collection... }
          ]
    - title: Retrieve documents with query filters
      description: Retrieve documents using a filter on the name property.
      query: |-
        db.stores.find({"name": "Fourth Coffee | Stationery Haven - New Franco"})
      output:
        devlang: json
        value: |
          [
            {
              "_id": "b5c9f932-4efa-49fd-86ba-b35624d80d95",
              "name": "Fourth Coffee | Stationery Haven - New Franco",
              "location": { "lat": 13.5236, "lon": -82.5707 },
              "staff": { "totalStaff": { "fullTime": 17, "partTime": 5 } },
              "sales": { "totalSales": 35346, "salesByCategory": [ { "categoryName": "Rulers", "totalSales": 35346 } ] },
              "promotionEvents": [ ... ]
            }
          ]
    - title: Retrieve documents with query filters on objects
      description: Retrieve documents using query filters on the lat and lon fields within the location object.
      query: |-
        db.stores.find({"location.lat": 13.5236, "location.lon": -82.5707})
      output:
        devlang: json
        value: |
          [
            {
              "_id": "b5c9f932-4efa-49fd-86ba-b35624d80d95",
              "location": { "lat": 13.5236, "lon": -82.5707 },
              ...
            }
          ]
    - title: Retrieve documents with query filters on arrays
      description: Retrieve documents from the promotionEvents array where the eventName is "Grand Bargain Gala".
      query: |-
        db.stores.find({"promotionEvents.eventName": "Grand Bargain Gala"})
      output:
        devlang: json
        value: |
          [
            {
              "_id": "d7fe6fb9-57e8-471a-b8d2-714e3579a415",
              "promotionEvents": [
                {
                  "eventName": "Grand Bargain Gala",
                  ...
                }
              ]
            }
          ]
    - title: Retrieve documents from nested arrays
      description: Retrieve documents from the "discounts" array, which is nested within the promotionEvents array where the categoryName is "Area Rugs".
      query: |-
        db.stores.find({"promotionEvents.discounts.categoryName": "Area Rugs"})
      output:
        devlang: json
        value: |
          [
            {
              "_id": "...",
              "promotionEvents": [
                {
                  "discounts": [
                    { "categoryName": "Area Rugs", ... }
                  ]
                }
              ]
            }
          ]
    - title: Include specific fields in the response
      description: A non-zero integer value or a boolean value of true includes the field in the response.
      query: |-
        db.stores.find({"name": "Fourth Coffee | Stationery Haven - New Franco"}, {"location": 1, "sales": 1})
      output:
        devlang: json
        value: |
          {
            "_id": "b5c9f932-4efa-49fd-86ba-b35624d80d95",
            "location": { "lat": 13.5236, "lon": -82.5707 },
            "sales": { "totalSales": 35346, "salesByCategory": [ { "categoryName": "Rulers", "totalSales": 35346 } ] }
          }
    - title: Exclude specific fields in the response
      description: An integer value of zero or a boolean value of false excludes the specified field from the query response.
      query: |-
        db.stores.find({"name": "Fourth Coffee | Stationery Haven - New Franco"}, {"promotionEvents": 0, "location": 0, "sales": 0})
      output:
        devlang: json
        value: |
          {
            "_id": "b5c9f932-4efa-49fd-86ba-b35624d80d95",
            "name": "Fourth Coffee | Stationery Haven - New Franco",
            "staff": { "totalStaff": { "fullTime": 17, "partTime": 5 } }
          }
    - title: Project the first element in an array that matches the query filter criteria
      description: The "arrayFieldName".$ command projects only the first occurrence of an object in an array that matches the specified query filters.
      query: |-
        db.stores.find({"promotionEvents.eventName": "Grand Bargain Gala"}, {"promotionEvents.$": true})
      output:
        devlang: json
        value: |
          {
            "_id": "d7fe6fb9-57e8-471a-b8d2-714e3579a415",
            "promotionEvents": [
              {
                "eventName": "Grand Bargain Gala",
                "promotionalDates": {
                  "startDate": { "Year": 2024, "Month": 3, "Day": 25 },
                  "endDate": { "Year": 2024, "Month": 4, "Day": 1 }
                },
                "discounts": [
                  { "categoryName": "Area Rugs", "discountPercentage": 7 },
                  { "categoryName": "Vinyl Flooring", "discountPercentage": 12 }
                ]
              }
            ]
          }
    - title: Project specific elements in an array that match the query filter criteria
      description: This query projects the eventName property and the nested Year property within the promotionEvents array.
      query: |-
        db.stores.find({"promotionEvents.eventName": "Grand Bargain Gala"}, {"promotionEvents.eventName": true, "promotionEvents.promotionalDates.startDate.Year": true})
      output:
        devlang: json
        value: |
          {
            "_id": "d7fe6fb9-57e8-471a-b8d2-714e3579a415",
            "promotionEvents": [
              { "eventName": "Grand Bargain Gala", "promotionalDates": { "startDate": { "Year": 2024 } } },
              { "eventName": "Grand Bargain Bash", "promotionalDates": { "startDate": { "Year": 2024 } } },
              { "eventName": "Epic Bargain Bash", "promotionalDates": { "startDate": { "Year": 2024 } } }
            ]
          }
related:
  - reference: /command/query-and-write/insert
  - reference: /command/query-and-write/update
